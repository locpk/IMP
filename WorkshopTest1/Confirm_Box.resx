<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="no_button.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEIAAABCCAYAAADjVADoAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAGMSURBVHhe7dfbTcNAEEZhd0QplEDpKYESwBNxJCty
        7L3MbcUc6X/gZb36EoTZqqqqqqqqqqrK3Me+731fz59skrPlGfKslIHw8zcLDDmT81NivCIwTYwjAkuF
        8Q6BaWCcIbAUGHcIbAbjCoGFYrQisBGMFgQWgtGLwHowehCYK8YoAmvBGEFgLhizCOwKYwaBmWM89p09
        eGRnGBoITO5qltY3gh0xNBGW+vVgArAcAmljaM0VgbJhhCBQFoxQBIrGSIFAURipEMgbIyUCeWGkRiBr
        jCUQyApjKQTSxlgSQdJ8bWbH/02WyAKBLYNhicDSY3ggsLQYnggsHUYEAkuDEYnAPveFlgFBFvqOIZ/C
        2aWiFoKh+dYo52ie5YahjSDnWZxpmuWFl8Kwvqg2hlkafyXuPi0tDPP3ixmMOwSaxTBHoBGMVgQaxXBD
        oB6MXgTqxXBHoBaMUQRqxQhDoCuMWQS6wwhHoDMMLQR6h5EGgY4Y2gj0ipEOgeRiVggERlqEqqqqqqqq
        qvr3bdsviRSFrVSpKXIAAAAASUVORK5CYII=
</value>
  </data>
  <data name="ok_button.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEIAAABCCAYAAADjVADoAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAIdSURBVHhe7ZrhTcQwDEa7ASMwAiMwAiMwAiMwAiMw
        AiMwAiMwAiNAnlCkqnIaO+0pqeNPen9OvSpxks+O75ZQKBQKhUKhf90l3hKfAnw+hR4T34lfga8EQXKv
        14QUAJgiCEyQbS8FAD4S7oPwkPhJSAEAguBezwlp8pkpjsN7Qpp8xn0QmBzbXZp8ZoogMElp8hn84j7h
        VphiqT7IEASec6taZsg8JdxKGwQyiFuxwpogkEHcqlYjZDBPt9IGgd3iNk1qgwBuMwRXaGnCEm7NUZsd
        wK05WoLgtny2BIHnXPoCK1srm9d09QUGe4tLjOYCtaZrgyUPli159mrstda2sGu6+YK0Ymf1/mpNlS3d
        fGFv27I65PtWvSSk95agM91NmrPbMkAuUdK7SjCOrqq1wjIMVGukljQJPNu908TR0KY1jZFa3pfhCA0h
        VlAaYIk9I7VkCOD5oWQ1NslI936Gk2CHnZGZTpd1NSEbqdUcYdi+I6tjMbkMRmr9XtfqUSNLn6CVYY/E
        VvzBQprAWVyq0aIptFoYLkvUZC2KNPC+S/5EZ02pNYYpnFqkLcFrdL9LHFVrSt3iou3WUiyt6Xq9Plut
        KbVrx+kWYjLWWyUcaewMK2vVOXwZfUTaG+ZlawaLNFWnK4MsqdbIwUum0d4RcWmQe5KyiGuDLGmbRaYw
        yJLWhdYUBllSvotMZZAlcRcZthEbCoVCoVDooJblD3+Sou9qcdcsAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAh1MxAIlTkQCHT98AiE7jAIZN/wCGTf8AiE7YAIdR0QCLU3sAhlETAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAilNiAIZL/0qphP+p0sH/5O/p/+rx7v/1/fr/9/z6/+Hu5//Z6uL/lsmy/yKdbv8Ah07pAItVOQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAiVEpAIpT9oC/pP/z+Pf/xvfj/4HpxP9I363/Etqf/wDVlP8A1pX/Jtuj/1fjsv+R7Mz/3fnv/+vy
        7f9Sron/AIdN0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAIdSV0Gnff/u9fL/p/DV/yrbo/8A05H/ANSR/wDUk/8A1ZP/ANWU/wDVlP8A1JP/ANSS/wDT
        kf8A1JP/SN+s/8n25P/b6uL/AJRi/wCLVSEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAACJUGNyu53/6/rz/0beqv8A0pD/ANKQ/wDTkf8A05H/ANOR/wDTkf8A05H/ANOR/wDT
        kf8A05H/ANOR/wDTkf8A0o//ANOS/2/luf/x9/X/N6N7/wCDTSEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAhVAwgL+m/9n47f8X1pz/ANGM/wDSj/8A0o//ANKP/wDSj/8A0o//ANKP/wDS
        j/8A0o//ANKP/wDSj/8A0o//ANKP/wDSj/8A0o7/ANGO/z7cpv/1+/j/O6Z8/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAE2shv/n+PH/AtSW/wDOif8Az4v/AM+L/wDPi/8Az4v/ANCL/wDQ
        i/8Az4v/AM+L/wDPi/8Az4v/AM+L/wDPi/8Az4v/AM+L/wDPi/8Az4v/AM6J/z7apP/w9/T/FJhp3QAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACl2em9Pn4/yrWnP8AzIT/AM2I/wDNiP8AzYj/AM2I/wDO
        hv8AwIb/AMGF/wDOhv8AzYj/AM2I/wDNiP8AzYj/AM2I/wDNiP8AzYj/AM2I/wDNiP8AzYj/AM2I/2fh
        sv/c6uT/AIVLSwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALPYx/985Lz/AMmD/wDLhf8Ay4X/AMuF/wDL
        hf8AzIP/AL99/+Td4f/p4ub/ALt9/wDMg/8Ay4X/AMuF/wDLhf8Ay4X/AMuF/wDLhf8Ay4X/AMuF/wDL
        hf8AyoT/AMuH/7zx3P92vJ/+AAAAAAAAAAAAAAAAAAAAAAAAAAAroHOD7/r1/wDLh/8Ax4D/AMiB/wDI
        gf8AyIH/AMh//wDDeP/b19r/9PPz//Tx8f/t5er/ALl6/wDJf/8AyIH/AMiB/wDIgf8AyIH/AMiB/wDI
        gf8AyIH/AMiB/wDIgf8Ax37/MNSY/+vy8P8AgEckAAAAAAAAAAAAAAAAAAAAAKHOvPaR58X/AMR5/wDG
        ff8Axn3/AMZ9/wDGff8AxXb/xcjI//bz9P/m5OH/5uTh//Lx8f/u6Oz/ALV5/wDHfP8Axn3/AMZ9/wDG
        ff8Axn3/AMZ9/wDGff8Axn3/AMZ9/wDGff8AxXv/zvXl/2G0kakAAAAAAAAAAAAAAAAAAAAA3Ovl/zXT
        l/8AxHj/AMV6/wDFev8AxXr/AMRy/7bAvv/28/T/5OHd/+Xi3f/l4t7/4+Dc//Hv7f/w6u//ALJ3/wDF
        eP8AxXr/AMV6/wDFev8AxXr/AMV6/wDFev8AxXr/AMV6/wDCdv994bn/rNXE9gAAAAAAAAAAAAAAAAmX
        aBvy+vf/AMR5/wDDd/8Aw3j/AMN4/wDDcf+Ytav/9vT0/+Hf2//h39v/7Onn//f2+P/u7Or/4d7Z/+7t
        6//w6u//ALB3/wDEdv8Aw3j/AMN4/wDDeP8Aw3j/AMN4/wDDeP8Aw3j/AMJ2/znSmP/S597/AAAAAAAA
        AAAAAAAAgcCnUdLz5v8AvG7/AMF2/wDBdv8AwXP/f7Cd//by8//h3tv/4NzY/+fk4v/4+Pr/JKp5/7C/
        uv/z8PD/3trX/+7s6v/y7fD/AK92/wDCdP8AwXb/AMF2/wDBdv8AwXb/AMF2/wDBdv8AwHX/AMaA//D2
        8v8AAAAAAAAAAAAAAACbzblmwe7c/wC9bf8AwHX/AMB1/wC/cf/Jycr/8/Dw/93a1P/k39z/9fX1/2Cq
        jf8AwXD/ALts/97Z3f/u7ez/3dnU/+zq6P/y7/P/Eqx3/wDBc/8AwHX/AMB1/wDAdf8AwHX/AMB1/wDA
        df8AvnD/8fj2/wAAAAAAAAAAAAAAALPZx1fA79n/ALts/wC+dv8AvnT/AL50/wC6av/Gysv/8vDv//Xx
        8v97rJn/AL5v/wC+dP8AvnP/AK9w//Lv8//p5uP/3NjS/+ro5v/z8fX/Iqt5/wC/c/8Avnb/AL50/wC+
        dP8AvnT/AL50/wC8b//w+fb/AAAAAAAAAAAAAAAA1+vdJtPz5v8SypH/LM2Y/yzNl/8szZj/KM2W/wrK
        kP/RztH/i7Ol/w/PlP8qzZb/LM2Y/yzNmP8izpb/WLGQ//j4+v/y7vD/7uzs//Xy9P/09Pf/VLOS/yDP
        lv8szZj/LM2X/yzNl/8ozZb/Ns+c//T59/8AAAAAAAAAAAAAAAAAAAAA7fr0/yDNl/8mzZn/KM2Z/yjN
        mf8ozZn/Js2Z/xnOlf8dzpf/Js2Z/yjNmf8ozZn/KM2Z/yjNmf8Yzpf/hbCh//n4+f/w7e7/8O3t//Tz
        9P/19Pf/VLGS/x3Omf8ozZn/KM2Z/yLNmP9e2a7/5/Lt+wAAAAAAAAAAAAAAAAAAAADu9fH/U9er/ybO
        mv8qz5v/Ks+b/yrPm/8qz5v/Ks+b/yrPm/8qz5v/Ks+b/yrPm/8qz5v/Ks+b/yrPm/8N0Jf/tb68//n4
        +v/y7/D/8u/w//X09f/39/j/W7KU/xzRmv8qz5v/Hc6Y/5Pkxv/b7OasAAAAAAAAAAAAAAAAAAAAAOTw
        6qiR5cb/H86a/yvQnf8r0J3/K9Cd/yvQnf8r0J3/K9Cd/yvQnf8r0J3/K9Cd/yvQnf8r0J3/K9Cd/ynQ
        nf8WzpX/3Nja//j3+P/y8PL/8vDy//X19v/39/j/Z7OZ/yXRnP8fzpr/yvHi//T5+S4AAAAAAAAAAAAA
        AAAAAAAA////GOT38P8z0qT/KdCf/yvRoP8r0aD/K9Gg/yvRoP8r0aD/K9Gg/yvRoP8r0aD/K9Gg/yvR
        oP8r0aD/K9Gg/yfSoP8wwZf/8u7x//f19v/z8vL/8/Ly//n5+v/Hx8j/F9Cd/1HYrf/3+vr/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8vf1w3/iwf8j0Z//LNOi/yzTov8s06L/LNOi/yzTov8s06L/LNOi/yzT
        ov8s06L/LNOi/yzTov8s06L/LNOi/yTTov9Wtpf/+Pj6//X19f/5+fr/wcTE/xjOm/8m06H/rezW//j6
        +GcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8M8fr3/0TXrP8m06P/LNOk/yzTpP8s06T/LNOk/yzT
        pP8s06T/LNOk/yzTpP8s06T/LNOk/yzTpP8s06T/LNOk/xzVov+RtKr/+fn6/7W+vf8O05//JNOi/2Te
        t//5+/r/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///9uve/g/znXq/8n06b/K9Sn/yvU
        p/8r1Kf/K9Sn/yvUp/8r1Kf/K9Sn/yvUp/8r1Kf/K9Sn/yvUp/8r1Kf/KtSn/xnVpP+Ps6n/E9Wm/yTT
        pv9I2bD/6vr0/////yUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8/Pysq+zY/zfX
        rf8l1Kj/K9Wp/yvVqf8r1an/K9Wp/yvVqf8r1an/K9Wp/yvVqf8r1an/K9Wp/yvVqf8r1an/KdWp/yLW
        qf8j1Kf/RNmw/9X26v////9XAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///+pv/Dh/0Xas/8j1Kj/K9aq/yzWq/8s1qv/LNar/yzWq/8s1qv/LNar/yzWq/8s1qv/LNar/yzW
        q/8r1ar/KdWr/1rduf/i+PD/////ZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///9q9Pz5/4Hlyf8117D/INWr/ynWrP8q16z/LNet/yzXrf8s163/LNet/yrX
        rP8m1qz/INWr/0Hbs/+Y6NL//v7+/////ywAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8N////r+f79P+a69X/YOC+/y/Ysv8f2K7/Itiv/yLY
        rv8i2K7/Odu0/3Hjxf+t7tz/+f78/////4kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////E////37////d9fz6/9z4
        8f/R9ez/0vbt/+H58v/+////////v////2EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////CP///yb///8nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////4Af//4AB//4AAP/8AAA/+AAAH/AAAB/wAAAP4AAAB+AA
        AAfAAAADwAAAA8AAAAOAAAADgAAAA4AAAAOAAAADgAAAA8AAAAPAAAADwAAAA8AAAAfgAAAH4AAAD/AA
        AA/4AAAf/AAAP/4AAH//AAH//8AH///8f/8=
</value>
  </data>
</root>